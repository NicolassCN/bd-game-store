-------------- ##

-- DIGITAL GAME SERVICE PLATFORM
-- BD PROJECT -- G107


-------------- ##

DROP TABLE HAS_PARTNERS CASCADE CONSTRAINTS;

DROP TABLE CREATES_SERVER CASCADE CONSTRAINTS;

DROP TABLE HAS_GENRE CASCADE CONSTRAINTS;

DROP TABLE OWNS CASCADE CONSTRAINTS;

DROP TABLE DEV_CREATES CASCADE CONSTRAINTS;

DROP TABLE WORKS CASCADE CONSTRAINTS;

DROP TABLE PUBLISHES CASCADE CONSTRAINTS;

DROP TABLE CREATES CASCADE CONSTRAINTS;

DROP TABLE HAS_PARENT CASCADE CONSTRAINTS;

DROP TABLE MULTIPLAYER_SESSION CASCADE CONSTRAINTS;

DROP TABLE SINGLEPLAYER_SESSION CASCADE CONSTRAINTS;

DROP TABLE GAME_SESSION CASCADE CONSTRAINTS;

DROP TABLE GAME_SERVER CASCADE CONSTRAINTS;

DROP TABLE REVIEWS CASCADE CONSTRAINTS;

DROP TABLE GENRE CASCADE CONSTRAINTS;

DROP TABLE GAME CASCADE CONSTRAINTS;

DROP TABLE SINGLEPLAYER_GAME CASCADE CONSTRAINTS;

DROP TABLE MULTIPLAYER_GAME CASCADE CONSTRAINTS;

DROP TABLE PLAYER CASCADE CONSTRAINTS;

DROP TABLE DEVELOPER CASCADE CONSTRAINTS;

DROP TABLE GAME_USER CASCADE CONSTRAINTS;

DROP TABLE STUDIO CASCADE CONSTRAINTS;

DROP TABLE PUBLISHER CASCADE CONSTRAINTS;

DROP TABLE COMPANY CASCADE CONSTRAINTS;

-------------- ##

CREATE TABLE COMPANY (
  NIF_COMPANY VARCHAR2(9),
  NAME_COMPANY VARCHAR2(30) NOT NULL,
  DESCRIPTION_COMPANY VARCHAR2(100) NOT NULL,
  COMPANY_ADDRESS VARCHAR2(50) NOT NULL,
  PRIMARY KEY(NIF_COMPANY)
);

CREATE TABLE PUBLISHER (
  NIF_COMPANY VARCHAR2(9),
  FOREIGN KEY (NIF_COMPANY) REFERENCES COMPANY(NIF_COMPANY),
  PRIMARY KEY (NIF_COMPANY)
);

CREATE TABLE STUDIO (
  NIF_COMPANY VARCHAR2(9),
  FOREIGN KEY (NIF_COMPANY) REFERENCES COMPANY(NIF_COMPANY),
  PRIMARY KEY (NIF_COMPANY)
);

CREATE TABLE GAME_USER (
  ID_USER VARCHAR2(30),
  NAME_USER VARCHAR2(200) NOT NULL,
  EMAIL VARCHAR2(200) NOT NULL,
  USER_PASSWORD VARCHAR2(200) NOT NULL,
  DATE_OF_BIRTH TIMESTAMP NOT NULL,
  USER_ADDRESS VARCHAR2(200) NOT NULL,
  PRIMARY KEY (ID_USER)
);

CREATE TABLE DEVELOPER (
  ID_USER VARCHAR2(30),
  NIF_DEVELOPER VARCHAR2(9) NOT NULL,
  FOREIGN KEY (ID_USER) REFERENCES GAME_USER(ID_USER),
  PRIMARY KEY (ID_USER)
);

CREATE TABLE PLAYER (
  ID_USER VARCHAR2(30),
  PAYMENT_METHOD VARCHAR2(200) NOT NULL,
  FOREIGN KEY (ID_USER) REFERENCES GAME_USER(ID_USER),
  PRIMARY KEY (ID_USER)
);

CREATE TABLE GAME (
  CODE_GAME INT,
  NAME_GAME VARCHAR2(80) NOT NULL,
  DESC_GAME VARCHAR2(500) NOT NULL,
  RELEASE_DATE DATE DEFAULT SYSDATE NOT NULL,
  CURRENT_PRICE DECIMAL(10, 2) NOT NULL,
  PRIMARY KEY (CODE_GAME)
);

CREATE TABLE SINGLEPLAYER_GAME (
  CODE_GAME INT,
  FOREIGN KEY(CODE_GAME) REFERENCES GAME(CODE_GAME) DEFERRABLE,
  PRIMARY KEY (CODE_GAME)
);

CREATE TABLE MULTIPLAYER_GAME (
  CODE_GAME INT,
  FOREIGN KEY(CODE_GAME) REFERENCES GAME(CODE_GAME) DEFERRABLE,
  PRIMARY KEY (CODE_GAME)
);

CREATE TABLE GENRE (
  CODE_GENRE INT,
  NAME_GENRE VARCHAR2(30) NOT NULL,
  PRIMARY KEY (CODE_GENRE)
);

CREATE TABLE OWNS (
  CODE_GAME INT,
  ID_USER VARCHAR2(30),
  PURCHASE_PRICE DECIMAL(10, 2) NOT NULL,
  PURCHASE_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  PURCHASE_METHOD VARCHAR2(200) NOT NULL,
  FOREIGN KEY (CODE_GAME) REFERENCES GAME(CODE_GAME) DEFERRABLE,
  FOREIGN KEY (ID_USER) REFERENCES PLAYER(ID_USER),
  PRIMARY KEY (CODE_GAME, ID_USER)
);

CREATE TABLE REVIEWS (
  ID_USER VARCHAR2(30),
  CODE_GAME INT,
  REVIEW_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  RATING INT NOT NULL,
  REVIEW_TEXT VARCHAR2(500),
  FOREIGN KEY (ID_USER, CODE_GAME) REFERENCES OWNS(ID_USER, CODE_GAME) DEFERRABLE,
  PRIMARY KEY (ID_USER, CODE_GAME),
  CHECK(RATING >= 1 AND RATING <= 5)
);

CREATE TABLE GAME_SERVER (
  CODE_GAME INT,
  SERVER_ID INT,
  DATETIME_CREATION TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  REGION VARCHAR2(200) NOT NULL,
  FOREIGN KEY (CODE_GAME) REFERENCES MULTIPLAYER_GAME(CODE_GAME) DEFERRABLE,
  PRIMARY KEY (CODE_GAME, SERVER_ID)
);

CREATE TABLE GAME_SESSION (
  ID_USER VARCHAR2(30),
  CODE_GAME INT,
  DATE_START TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  DATETIME_END TIMESTAMP,
  FOREIGN KEY (ID_USER, CODE_GAME) REFERENCES OWNS(ID_USER, CODE_GAME) DEFERRABLE,
  PRIMARY KEY (ID_USER, CODE_GAME, DATE_START)
);

CREATE TABLE SINGLEPLAYER_SESSION (
  ID_USER VARCHAR2(30),
  CODE_GAME INT,
  DATE_START TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (ID_USER, CODE_GAME, DATE_START) REFERENCES GAME_SESSION(ID_USER, CODE_GAME, DATE_START) DEFERRABLE,
  PRIMARY KEY(ID_USER, CODE_GAME, DATE_START)
);

CREATE TABLE MULTIPLAYER_SESSION (
  ID_USER VARCHAR2(30),
  CODE_GAME INT,
  DATE_START TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  SERVER_ID INT NOT NULL,
  S_CODE_GAME INT NOT NULL,
  FOREIGN KEY (ID_USER, CODE_GAME, DATE_START) REFERENCES GAME_SESSION(ID_USER, CODE_GAME, DATE_START) DEFERRABLE,
  FOREIGN KEY (S_CODE_GAME, SERVER_ID) REFERENCES GAME_SERVER(CODE_GAME, SERVER_ID) DEFERRABLE,
  PRIMARY KEY (ID_USER, CODE_GAME, DATE_START),
  CHECK (CODE_GAME = S_CODE_GAME)
);

CREATE TABLE HAS_PARENT (
  NIF_SUBSIDIARY VARCHAR2(9),
  NIF_PARENT VARCHAR2(9) NOT NULL,
  FOREIGN KEY (NIF_SUBSIDIARY) REFERENCES COMPANY(NIF_COMPANY),
  FOREIGN KEY (NIF_PARENT) REFERENCES COMPANY(NIF_COMPANY),
  PRIMARY KEY (NIF_SUBSIDIARY),
  CHECK(NIF_SUBSIDIARY <> NIF_PARENT)
);

CREATE TABLE CREATES (
  CODE_GAME INT,
  NIF_STUDIO VARCHAR2(9) NOT NULL,
  FOREIGN KEY (CODE_GAME) REFERENCES GAME(CODE_GAME) DEFERRABLE,
  FOREIGN KEY (NIF_STUDIO) REFERENCES STUDIO(NIF_COMPANY),
  PRIMARY KEY (CODE_GAME)
);

CREATE TABLE PUBLISHES (
  CODE_GAME INT,
  NIF_PUBLISHER VARCHAR2(9) NOT NULL,
  FOREIGN KEY (CODE_GAME) REFERENCES CREATES(CODE_GAME) DEFERRABLE,
  FOREIGN KEY (NIF_PUBLISHER) REFERENCES PUBLISHER(NIF_COMPANY),
  PRIMARY KEY (CODE_GAME)
);

CREATE TABLE WORKS (
  ID_USER VARCHAR2(30),
  NIF_COMPANY VARCHAR2(9) NOT NULL,
  FOREIGN KEY (ID_USER) REFERENCES DEVELOPER(ID_USER),
  FOREIGN KEY (NIF_COMPANY) REFERENCES STUDIO(NIF_COMPANY),
  PRIMARY KEY (ID_USER)
);

CREATE TABLE DEV_CREATES (
  CODE_GAME INT,
  ID_USER VARCHAR2(30),
  FOREIGN KEY (CODE_GAME) REFERENCES GAME(CODE_GAME) DEFERRABLE,
  FOREIGN KEY (ID_USER) REFERENCES DEVELOPER(ID_USER),
  PRIMARY KEY (CODE_GAME, ID_USER)
);

CREATE TABLE HAS_GENRE (
  CODE_GAME INT,
  CODE_GENRE INT,
  FOREIGN KEY (CODE_GAME) REFERENCES GAME(CODE_GAME) DEFERRABLE,
  FOREIGN KEY (CODE_GENRE) REFERENCES GENRE(CODE_GENRE),
  PRIMARY KEY (CODE_GAME, CODE_GENRE)
);

CREATE TABLE CREATES_SERVER (
  CODE_GAME INT,
  SERVER_ID INT,
  ID_USER VARCHAR2(30),
  HOST_KEY VARCHAR2(200) NOT NULL,
  FOREIGN KEY (ID_USER) REFERENCES PLAYER(ID_USER),
  FOREIGN KEY (CODE_GAME, SERVER_ID) REFERENCES GAME_SERVER(CODE_GAME, SERVER_ID),
  PRIMARY KEY (CODE_GAME, SERVER_ID)
);

CREATE TABLE HAS_PARTNERS (
  CODE_GAME INT,
  NIF_COMPANY VARCHAR2(9),
  FOREIGN KEY (CODE_GAME) REFERENCES CREATES(CODE_GAME) DEFERRABLE,
  FOREIGN KEY (NIF_COMPANY) REFERENCES STUDIO(NIF_COMPANY),
  PRIMARY KEY (CODE_GAME, NIF_COMPANY)
);

-------------- ##

CREATE OR REPLACE TRIGGER CHECK_GAME_HAS_GENRE BEFORE
  INSERT OR UPDATE ON GAME FOR EACH ROW
DECLARE
  GENRECOUNT INT;
BEGIN
  SELECT
    COUNT(*) INTO GENRECOUNT
  FROM
    HAS_GENRE
  WHERE
    CODE_GAME = :NEW.CODE_GAME;
  IF GENRECOUNT = 0 THEN
    RAISE_APPLICATION_ERROR(-20001, 'Game: All games must have at least one genre.');
  END IF;
END;
/

CREATE OR REPLACE TRIGGER IS_NOT_ALREADY_STUDIO_CREATED BEFORE
  INSERT ON DEV_CREATES FOR EACH ROW
DECLARE
  CREATED_COUNT INT;
BEGIN
  SELECT
    COUNT(*) INTO CREATED_COUNT
  FROM
    CREATES
  WHERE
    CODE_GAME = :NEW.CODE_GAME;
  IF CREATED_COUNT <> 0 THEN
    RAISE_APPLICATION_ERROR (-20101, 'This game is already developed by a studio.');
  END IF;
END;
/

CREATE OR REPLACE TRIGGER IS_NOT_ALREADY_DEV_CREATED BEFORE
  INSERT ON CREATES FOR EACH ROW
DECLARE
  CREATED_COUNT INT;
BEGIN
  SELECT
    COUNT(*) INTO CREATED_COUNT
  FROM
    DEV_CREATES
  WHERE
    CODE_GAME = :NEW.CODE_GAME;
  IF CREATED_COUNT <> 0 THEN
    RAISE_APPLICATION_ERROR (-20101, 'This game is already developed by an independent developer.');
  END IF;
END;
/

CREATE OR REPLACE TRIGGER IS_NOT_MAIN_STUDIO BEFORE
  INSERT ON HAS_PARTNERS FOR EACH ROW
DECLARE
  NIF_MAIN_STUDIO VARCHAR2(9);
BEGIN
  SELECT
    NIF_STUDIO INTO NIF_MAIN_STUDIO
  FROM
    CREATES
  WHERE
    CODE_GAME = :NEW.CODE_GAME;
  IF :NEW.NIF_COMPANY = NIF_MAIN_STUDIO THEN
    RAISE_APPLICATION_ERROR (-20101, 'A studio can''t be a partner to a game it is the main developer of.');
  END IF;
END;
/

CREATE OR REPLACE FUNCTION COUNT_ACTIVE_SESSIONS (
  ID_USER VARCHAR2
) RETURN INT AS
  SESSION_COUNT INT;
BEGIN
  SELECT
    COUNT(*) INTO SESSION_COUNT
  FROM
    GAME_SESSION
  WHERE
    ID_USER = COUNT_ACTIVE_SESSIONS.ID_USER
    AND DATETIME_END IS NULL;
  RETURN SESSION_COUNT;
END;
/

CREATE OR REPLACE TRIGGER ASSURE_NO_UNFINISHED_SESSION BEFORE
  INSERT ON GAME_SESSION FOR EACH ROW
DECLARE
  SESSION_COUNT INT;
BEGIN
  SELECT
    COUNT_ACTIVE_SESSIONS(:NEW.ID_USER) INTO SESSION_COUNT
  FROM
    DUAL;
  IF SESSION_COUNT >= 1 THEN
    RAISE_APPLICATION_ERROR (-20101, 'Game_session: A player can''t have more than one active session at a time.');
  END IF;
END;
/

CREATE OR REPLACE FUNCTION GET_SINGLEPLAYER_CODE (
  CODE_GAME INT
) RETURN INT AS
  CODE_SP_GAME INT;
BEGIN
  SELECT
    CODE_GAME INTO CODE_SP_GAME
  FROM
    SINGLEPLAYER_GAME
  WHERE
    CODE_GAME = GET_SINGLEPLAYER_CODE.CODE_GAME;
  RETURN CODE_SP_GAME;
EXCEPTION
  WHEN NO_DATA_FOUND THEN
    RETURN NULL;
END;
/

CREATE OR REPLACE FUNCTION GET_MULTIPLAYER_CODE (
  CODE_GAME INT
) RETURN INT AS
  CODE_MP_GAME INT;
BEGIN
  SELECT
    CODE_GAME INTO CODE_MP_GAME
  FROM
    MULTIPLAYER_GAME
  WHERE
    CODE_GAME = GET_MULTIPLAYER_CODE.CODE_GAME;
  RETURN CODE_MP_GAME;
EXCEPTION
  WHEN NO_DATA_FOUND THEN
    RETURN NULL;
END;
/

CREATE OR REPLACE TRIGGER ASSURE_GAME_IS_VALID BEFORE
  INSERT ON GAME FOR EACH ROW
DECLARE
  CODE_SP_GAME INT;
  CODE_MP_GAME INT;
BEGIN
  SELECT
    GET_SINGLEPLAYER_CODE(:NEW.CODE_GAME) INTO CODE_SP_GAME
  FROM
    DUAL;
  SELECT
    GET_MULTIPLAYER_CODE(:NEW.CODE_GAME) INTO CODE_MP_GAME
  FROM
    DUAL;
  IF CODE_SP_GAME IS NULL AND CODE_MP_GAME IS NULL THEN
    RAISE_APPLICATION_ERROR (-20101, 'Game: A game must be single-player, multi-player or both.');
  END IF;
END;
/

-------------- ##

CREATE OR REPLACE PROCEDURE ADD_SUBSIDIARY (
  NIF_SUBSIDIARY VARCHAR2,
  NIF_PARENT VARCHAR2
) AS
BEGIN
  INSERT INTO HAS_PARENT VALUES(
    NIF_SUBSIDIARY,
    NIF_PARENT
  );
END;
/

CREATE OR REPLACE PROCEDURE ADD_STUDIO (
  NIF_COMPANY VARCHAR2,
  NAME_COMPANY VARCHAR2,
  DESCRIPTION_COMPANY VARCHAR2,
  COMPANY_ADDRESS VARCHAR2,
  NIF_PARENT VARCHAR2
) AS
BEGIN
  INSERT INTO COMPANY VALUES(
    NIF_COMPANY,
    NAME_COMPANY,
    DESCRIPTION_COMPANY,
    COMPANY_ADDRESS
  );
  INSERT INTO STUDIO VALUES(
    NIF_COMPANY
  );
  IF NIF_PARENT IS NOT NULL THEN
    ADD_SUBSIDIARY(NIF_COMPANY, NIF_PARENT);
  END IF;
END;
/

CREATE OR REPLACE PROCEDURE ADD_PUBLISHER (
  NIF_COMPANY VARCHAR2,
  NAME_COMPANY VARCHAR2,
  DESCRIPTION_COMPANY VARCHAR2,
  COMPANY_ADDRESS VARCHAR2,
  NIF_PARENT VARCHAR2
) AS
BEGIN
  INSERT INTO COMPANY VALUES(
    NIF_COMPANY,
    NAME_COMPANY,
    DESCRIPTION_COMPANY,
    COMPANY_ADDRESS
  );
  INSERT INTO PUBLISHER VALUES(
    NIF_COMPANY
  );
  IF NIF_PARENT IS NOT NULL THEN
    ADD_SUBSIDIARY(NIF_COMPANY, NIF_PARENT);
  END IF;
END;
/

CREATE OR REPLACE PROCEDURE CREATE_USER (
  ID_USER VARCHAR2,
  NAME_USER VARCHAR2,
  EMAIL VARCHAR2,
  USER_PASSWORD VARCHAR2,
  USER_ADDRESS VARCHAR2,
  NIF_DEVELOPER VARCHAR2,
  DATE_OF_BIRTH TIMESTAMP,
  PAYMENT_METHOD VARCHAR2
) AS
BEGIN
  IF PAYMENT_METHOD IS NULL AND NIF_DEVELOPER IS NULL THEN
    RAISE_APPLICATION_ERROR (-20101, 'Create_user: Must have a nif number and/or a payment method');
  END IF;
  INSERT INTO GAME_USER VALUES(
    ID_USER,
    NAME_USER,
    EMAIL,
    USER_PASSWORD,
    DATE_OF_BIRTH,
    USER_ADDRESS
  );
  IF NIF_DEVELOPER IS NOT NULL THEN
    INSERT INTO DEVELOPER VALUES(
      ID_USER,
      NIF_DEVELOPER
    );
  END IF;
  IF PAYMENT_METHOD IS NOT NULL THEN
    INSERT INTO PLAYER VALUES(
      ID_USER,
      PAYMENT_METHOD
    );
  END IF;
END;
/

CREATE OR REPLACE PROCEDURE UPDATE_USER_EMAIL (
  ID_USER VARCHAR2,
  EMAIL VARCHAR2
) AS
BEGIN
  UPDATE GAME_USER
  SET
    EMAIL = UPDATE_USER_EMAIL.EMAIL
  WHERE
    ID_USER = UPDATE_USER_EMAIL.ID_USER;
END;
/

CREATE OR REPLACE PROCEDURE UPDATE_USER_NAME (
  ID_USER VARCHAR2,
  NAME_USER VARCHAR2
) AS
BEGIN
  UPDATE GAME_USER
  SET
    NAME_USER = UPDATE_USER_NAME.NAME_USER
  WHERE
    ID_USER = UPDATE_USER_NAME.ID_USER;
END;
/

CREATE OR REPLACE PROCEDURE UPDATE_USER_PASSWORD (
  ID_USER VARCHAR2,
  USER_PASSWORD VARCHAR2
) AS
BEGIN
  UPDATE GAME_USER
  SET
    USER_PASSWORD = UPDATE_USER_PASSWORD.USER_PASSWORD
  WHERE
    ID_USER = UPDATE_USER_PASSWORD.ID_USER;
END;
/

CREATE OR REPLACE PROCEDURE UPDATE_USER_ADDRESS (
  ID_USER VARCHAR2,
  USER_ADDRESS VARCHAR2
) AS
BEGIN
  UPDATE GAME_USER
  SET
    USER_ADDRESS = UPDATE_USER_ADDRESS.USER_ADDRESS
  WHERE
    ID_USER = UPDATE_USER_ADDRESS.ID_USER;
END;
/

CREATE OR REPLACE FUNCTION IS_PLAYER (
  ID_USER VARCHAR2
) RETURN VARCHAR2 AS
  PLAYER_ID VARCHAR2(30);
BEGIN
  SELECT
    P.ID_USER INTO PLAYER_ID
  FROM
    PLAYER P
  WHERE
    P.ID_USER = IS_PLAYER.ID_USER;
  RETURN PLAYER_ID;
EXCEPTION
  WHEN NO_DATA_FOUND THEN
    RETURN NULL;
END;
/

CREATE OR REPLACE PROCEDURE UPDATE_PAYMENT_METHOD (
  ID_USER VARCHAR2,
  PAYMENT_METHOD VARCHAR2
) AS
BEGIN
  IF IS_PLAYER(ID_USER) IS NULL THEN
    INSERT INTO PLAYER VALUES(
      ID_USER,
      PAYMENT_METHOD
    );
  ELSE
    UPDATE PLAYER
    SET
      PAYMENT_METHOD = UPDATE_PAYMENT_METHOD.PAYMENT_METHOD
    WHERE
      ID_USER = UPDATE_PAYMENT_METHOD.ID_USER;
  END IF;
END;
/

CREATE OR REPLACE FUNCTION IS_DEVELOPER (
  ID_USER VARCHAR2
) RETURN VARCHAR2 AS
  DEVELOPER_ID VARCHAR2(30);
BEGIN
  SELECT
    D.ID_USER INTO DEVELOPER_ID
  FROM
    DEVELOPER D
  WHERE
    D.ID_USER = IS_DEVELOPER.ID_USER;
  RETURN DEVELOPER_ID;
EXCEPTION
  WHEN NO_DATA_FOUND THEN
    RETURN NULL;
END;
/

CREATE OR REPLACE PROCEDURE UPDATE_NIF_DEVELOPER (
  ID_USER VARCHAR2,
  NIF_DEVELOPER VARCHAR2
) AS
BEGIN
  IF IS_DEVELOPER(ID_USER) IS NULL THEN
    INSERT INTO DEVELOPER VALUES(
      ID_USER,
      NIF_DEVELOPER
    );
  ELSE
    UPDATE DEVELOPER
    SET
      NIF_DEVELOPER = UPDATE_NIF_DEVELOPER.NIF_DEVELOPER
    WHERE
      ID_USER = UPDATE_NIF_DEVELOPER.ID_USER;
  END IF;
END;
/

CREATE OR REPLACE FUNCTION HAS_EMPLOYER (
  ID_USER VARCHAR2
) RETURN VARCHAR2 AS
  EMPLOYER_NIF VARCHAR2(9);
BEGIN
  IF IS_DEVELOPER(ID_USER) IS NULL THEN
    RETURN NULL;
  END IF;
  SELECT
    W.NIF_COMPANY INTO EMPLOYER_NIF
  FROM
    WORKS W
  WHERE
    W.ID_USER = HAS_EMPLOYER.ID_USER;
  RETURN EMPLOYER_NIF;
EXCEPTION
  WHEN NO_DATA_FOUND THEN
    RETURN NULL;
END;
/

CREATE OR REPLACE PROCEDURE UPDATE_EMPLOYER (
  ID_USER VARCHAR2,
  NIF_STUDIO VARCHAR2
) AS
BEGIN
  IF HAS_EMPLOYER(ID_USER) IS NULL THEN
    INSERT INTO WORKS VALUES (
      ID_USER,
      NIF_STUDIO
    );
  ELSE
    UPDATE WORKS
    SET
      NIF_COMPANY = UPDATE_EMPLOYER.NIF_STUDIO
    WHERE
      ID_USER = UPDATE_EMPLOYER.ID_USER;
  END IF;
END;
/

CREATE OR REPLACE TYPE SELECTED_GENRES AS
  VARRAY(
    16
  ) OF INT;
/

CREATE OR REPLACE TYPE SELECTED_PARTNERS AS
  VARRAY(
    10
  ) OF VARCHAR2(
    9
  );
/

CREATE OR REPLACE TYPE SELECTED_DEVELOPERS AS
  VARRAY(
    10
  ) OF VARCHAR2(
    30
  );
/

CREATE OR REPLACE PROCEDURE INSERT_GAME (
  CODE_GAME INT,
  NAME_GAME VARCHAR2,
  DESC_GAME VARCHAR2,
  RELEASE_DATE DATE,
  CURRENT_PRICE DECIMAL
) AS
BEGIN
  INSERT INTO GAME VALUES (
    CODE_GAME,
    NAME_GAME,
    DESC_GAME,
    RELEASE_DATE,
    CURRENT_PRICE
  );
END;
/

CREATE OR REPLACE PROCEDURE INSERT_GENRES (
  CODE_GAME INT,
  CODE_GENRE IN SELECTED_GENRES
) AS
BEGIN
  FOR I IN 1..CODE_GENRE.COUNT LOOP
    INSERT INTO HAS_GENRE VALUES (
      CODE_GAME,
      CODE_GENRE(I)
    );
  END LOOP;
END;
/

CREATE OR REPLACE PROCEDURE INSERT_CREATES (
  CODE_GAME INT,
  NIF_STUDIO VARCHAR2,
  NIF_PARTNERS IN SELECTED_PARTNERS,
  NIF_PUBLISHER VARCHAR2
) AS
BEGIN
  INSERT INTO CREATES VALUES (
    CODE_GAME,
    NIF_STUDIO
  );
  IF NIF_PARTNERS IS NOT NULL THEN
    FOR I IN 1..NIF_PARTNERS.COUNT LOOP
      INSERT INTO HAS_PARTNERS VALUES (
        CODE_GAME,
        NIF_PARTNERS(I)
      );
    END LOOP;
  END IF;
  IF NIF_PUBLISHER IS NOT NULL THEN
    INSERT INTO PUBLISHES VALUES (
      CODE_GAME,
      NIF_PUBLISHER
    );
  END IF;
END;
/

CREATE OR REPLACE PROCEDURE INSERT_DEV_CREATES (
  CODE_GAME INT,
  ID_DEVELOPER IN SELECTED_DEVELOPERS
) AS
BEGIN
  FOR I IN 1..ID_DEVELOPER.COUNT LOOP
    INSERT INTO DEV_CREATES VALUES (
      CODE_GAME,
      ID_DEVELOPER(I)
    );
  END LOOP;
END;
/

CREATE OR REPLACE PROCEDURE ADD_GAME (
  NAME_GAME VARCHAR2,
  DESC_GAME VARCHAR2,
  RELEASE_DATE DATE,
  CODE_GENRE IN SELECTED_GENRES,
  NIF_STUDIO VARCHAR2, -- case null if isnt created by a studio
  NIF_PARTNERS IN SELECTED_PARTNERS, -- case null if dont have parthers
  ID_DEVELOPER IN SELECTED_DEVELOPERS, -- case null if isnt created by a team of developers
  NIF_PUBLISHER VARCHAR2,
  CURRENT_PRICE DECIMAL,
  IS_SINGLEPLAYER BOOLEAN,
  IS_MULTIPLAYER BOOLEAN
) AS
  CODE_GAME INT; -- enumarates the game entries
BEGIN
  IF NOT IS_SINGLEPLAYER AND NOT IS_MULTIPLAYER THEN
    RAISE_APPLICATION_ERROR(-20101, 'Add_game: Game must be single_player, multiplayer or both');
  END IF;
  EXECUTE IMMEDIATE 'ALTER SESSION SET CONSTRAINTS = DEFERRED';
  IF CODE_GENRE IS NULL OR CODE_GENRE.COUNT = 0 THEN
    RAISE_APPLICATION_ERROR(-20101, 'Add_game: Must have a genre.');
  END IF;
  SELECT
    COALESCE(MAX(CODE_GAME),
    0) + 1 INTO CODE_GAME
  FROM
    GAME;
  INSERT_GENRES(CODE_GAME, CODE_GENRE);
  IF NIF_STUDIO IS NOT NULL THEN
    INSERT_CREATES(CODE_GAME, NIF_STUDIO, NIF_PARTNERS, NIF_PUBLISHER);
  ELSE
    IF ID_DEVELOPER IS NULL OR ID_DEVELOPER.COUNT = 0 THEN
      RAISE_APPLICATION_ERROR(-20102, 'Add_game: If game is not made by a studio, it must have developers.');
    END IF;
    INSERT_DEV_CREATES(CODE_GAME, ID_DEVELOPER);
  END IF;
  IF IS_SINGLEPLAYER THEN
    INSERT INTO SINGLEPLAYER_GAME VALUES(
      CODE_GAME
    );
  END IF;
  IF IS_MULTIPLAYER THEN
    INSERT INTO MULTIPLAYER_GAME VALUES(
      CODE_GAME
    );
  END IF;
  INSERT_GAME(CODE_GAME, NAME_GAME, DESC_GAME, RELEASE_DATE, CURRENT_PRICE);
  COMMIT;
  EXECUTE IMMEDIATE 'ALTER SESSION SET CONSTRAINTS = IMMEDIATE';
  COMMIT;
EXCEPTION
  WHEN OTHERS THEN
    EXECUTE IMMEDIATE 'ALTER SESSION SET CONSTRAINTS = IMMEDIATE';
    RAISE;
    COMMIT;
END;
/

CREATE OR REPLACE FUNCTION GET_PRICE (
  CODE_GAME INT
) RETURN NUMBER AS
  PRICE DECIMAL(10, 2);
BEGIN
  SELECT
    CURRENT_PRICE INTO PRICE
  FROM
    GAME
  WHERE
    CODE_GAME = GET_PRICE.CODE_GAME;
  RETURN PRICE;
END;
/

CREATE OR REPLACE FUNCTION GET_PAYMENT_METHOD (
  ID_USER VARCHAR2
) RETURN VARCHAR2 AS
  PAYMENT_METHOD VARCHAR2(200);
BEGIN
  SELECT
    PAYMENT_METHOD INTO PAYMENT_METHOD
  FROM
    PLAYER
  WHERE
    ID_USER = GET_PAYMENT_METHOD.ID_USER;
  RETURN PAYMENT_METHOD;
END;
/

CREATE OR REPLACE PROCEDURE PURCHASE_GAME (
  CODE_GAME INT,
  ID_USER VARCHAR2,
  PURCHASE_DATE TIMESTAMP
) AS
BEGIN
  INSERT INTO OWNS VALUES (
    CODE_GAME,
    ID_USER,
    GET_PRICE(CODE_GAME),
    PURCHASE_DATE,
    GET_PAYMENT_METHOD(ID_USER)
  );
END;
/

CREATE OR REPLACE FUNCTION GENERATE_SERVER_ID (
  CODE_GAME INT
) RETURN INT AS
  SERVER_ID INT;
BEGIN
  SELECT
    COUNT(*) + 1 INTO SERVER_ID
  FROM
    GAME_SERVER
  WHERE
    CODE_GAME = GENERATE_SERVER_ID.CODE_GAME;
  RETURN SERVER_ID;
END;
/

CREATE OR REPLACE PROCEDURE ADD_SERVER (
  CODE_GAME INT,
  DATETIME_CREATION TIMESTAMP,
  REGION VARCHAR2,
  ID_USER VARCHAR2, -- Can be null when the server is not created by a player
  HOST_KEY VARCHAR2 -- Can be null when the server is not created by a player
) AS
  SERVER_ID INT;
BEGIN
  IF GET_MULTIPLAYER_CODE(CODE_GAME) IS NULL THEN
    RAISE_APPLICATION_ERROR(-20101, 'ADD_SERVER: Game must be a multi-player game.');
  END IF;
  SELECT
    GENERATE_SERVER_ID(CODE_GAME) INTO SERVER_ID
  FROM
    DUAL;
  INSERT INTO GAME_SERVER VALUES(
    CODE_GAME,
    SERVER_ID,
    DATETIME_CREATION,
    REGION
  );
  IF ID_USER IS NOT NULL THEN
    IF HOST_KEY IS NULL THEN
      RAISE_APPLICATION_ERROR(-20101, 'ADD_SERVER: Player created servers must have a non-null host_key.');
    END IF;
    INSERT INTO CREATES_SERVER VALUES(
      CODE_GAME,
      SERVER_ID,
      ID_USER,
      HOST_KEY
    );
  END IF;
END;
/

CREATE OR REPLACE PROCEDURE ADD_SESSION (
  ID_USER VARCHAR2,
  CODE_GAME NUMBER,
  DATE_START TIMESTAMP,
  SERVER_ID NUMBER -- Null when the session is single-player
) AS
BEGIN
  IF SERVER_ID IS NOT NULL AND GET_MULTIPLAYER_CODE(CODE_GAME) IS NULL THEN
    RAISE_APPLICATION_ERROR(-20101, 'ADD_SESSION: Games that are only single-player don''t have multiplayer sessions.');
  END IF;
  INSERT INTO GAME_SESSION VALUES(
    ID_USER,
    CODE_GAME,
    DATE_START,
    NULL
  );
  IF SERVER_ID IS NOT NULL THEN
    INSERT INTO MULTIPLAYER_SESSION VALUES(
      ID_USER,
      CODE_GAME,
      DATE_START,
      SERVER_ID,
      CODE_GAME
    );
  ELSE
    INSERT INTO SINGLEPLAYER_SESSION VALUES(
      ID_USER,
      CODE_GAME,
      DATE_START
    );
  END IF;
  COMMIT;
END;
/

CREATE OR REPLACE PROCEDURE END_SESSION (
  ID_USER VARCHAR2
) AS
BEGIN
  UPDATE GAME_SESSION
  SET
    DATETIME_END = SYSTIMESTAMP
  WHERE
    ID_USER = END_SESSION.ID_USER
    AND DATETIME_END IS NULL;
  COMMIT;
END;
/

-------------- ##
----
-- Insertion of COMPANIES -- not necessary publishers or studios
-- Args: nif, name, desc, addr
INSERT INTO COMPANY VALUES (
  '549656558',
  'Microsoft',
  'The largest vendor of computers in the world, owner of Xbox ',
  'Washington - USA'
);

INSERT INTO COMPANY VALUES (
  '557375112',
  'Sony',
  'The leader in audio/video electronics, owner of Playstation',
  'Tokyo - JAPAN'
);

INSERT INTO COMPANY VALUES (
  '566997193',
  'Valve Co.',
  'We make games, Steam, and hardware',
  'Washington - USA'
);

INSERT INTO COMPANY VALUES (
  '507757692',
  'Warner Bros Discovery',
  'A premier global media and entertainment company',
  'New York - USA'
);

INSERT INTO COMPANY VALUES (
  '523949502',
  'Nintendo Co',
  'Our mission is to put a smile in the face of everyone we touch',
  'Quioto - Japan'
);

INSERT INTO COMPANY VALUES (
  '577847761',
  'Apple',
  'Now innovating in the gaming industry',
  'California - USA'
);

INSERT INTO COMPANY VALUES (
  '547290961',
  'Take-Two Interactive',
  'Making good interactive entertainment for consumers around the globe',
  'New York - USA'
);

INSERT INTO COMPANY VALUES (
  '531093041',
  'Epic Games',
  'Developing cutting-edge games and unreal game engine techonology',
  'North Carolina - USA'
);

INSERT INTO COMPANY VALUES (
  '572930193',
  'Tencent',
  'You wouldnt believe how big we are',
  'Shenzhen - China'
);

BEGIN
 ----
 -- Insertion of PUBLISHER -- must follow the pattern
 -- Args: nif , name , desc , addr , nif_parent (specify if has one, NULL otherwise)
  ADD_PUBLISHER('464567789', 'Playstation Studios', 'We love telling stories, thats what motivates us', 'California - USA', '557375112');
  ADD_PUBLISHER('464137789', 'Xbox Game Studios', 'We believe games unite people', 'Washington - USA', '549656558');
  ADD_PUBLISHER('489593231', 'Nintendo', 'Lets-a-go', 'Quioto - Japan', '523949502');
  ADD_PUBLISHER('412214893', 'Activision', 'Microsoft is trying to buy us', 'California - USA', NULL);
  ADD_PUBLISHER('439740932', 'Bethesda Softworks', 'Microsoft bought us', 'Maryland - USA', '549656558');
  ADD_PUBLISHER('429402001', 'Electronic Arts', 'We like lootboxes and making expansions', 'California - USA', NULL);
  ADD_PUBLISHER('478090993', 'Ubisoft', 'We live in a buggy world', 'Carentoir - France', NULL);
  ADD_PUBLISHER('447290611', 'Sega', 'We also make games and we did consoles', 'Tokyo - Japan', NULL);
  ADD_PUBLISHER('452545578', 'Devolver Digital', 'Purveyors of fine digital indie creators', 'Texas - USA', NULL);
  ADD_PUBLISHER('466666666', 'Rockstar Games', 'To be announced', 'New York - USA', '531093041');
  ADD_PUBLISHER('467949834', 'BANDAI NAMCO', 'We make unique games', 'Tokyo - Japan', NULL);
  ADD_PUBLISHER('467949835', 'Valve', 'One, two but never three', 'Washington - USA', '566997193');
 -----
 --  Insertion of STUDIOS -- must follow the pattern
 -- Args: nif , name , desc , addr , nif_parent (specify if has one, NULL otherwise)
  ADD_STUDIO('366666552', 'Rockstar North', 'Working on that game', 'Edinburgh, Scotland', '466666666');
  ADD_STUDIO('366666217', 'Rockstar India', 'Helping that game', 'Bangalore - India', '466666666');
  ADD_STUDIO('336666216', 'Rockstar Toronto', 'Not doing that game', 'Toronto - Canada', '466666666');
  ADD_STUDIO('397867250', 'CAPCOM', 'Our legacy of historic franchises and arcades tells all', 'Osaka - Japan', NULL);
  ADD_STUDIO('318721904', 'Square Enix', 'Master in RPGs', 'Tokyo - Japan', NULL);
  ADD_STUDIO('391797921', 'Bethesda Game Studios', 'Focusing on doing groundbreaking and massive RPGs', 'Maryland - USA', '439740932');
  ADD_STUDIO('339332942', 'Arkane', 'Redfall is great', 'Lyon - France', '439740932');
  ADD_STUDIO('365270912', 'Mojang Studios', 'We are "notch" doing that update', 'Stockholm - Sweden', '464137789');
  ADD_STUDIO('397840517', '343 Industries', 'Home to the Halo Universe, full of tallented people', 'Washington - USA', '464137789');
  ADD_STUDIO('388179102', 'Bungie', 'We were with Microsoft, them independent, now with Sony', 'Illinois - USA', '464567789');
  ADD_STUDIO('375929402', 'Blizzard Entertainment', 'Has the biggest scandal of the gaming industry', 'California - USA', '412214893');
  ADD_STUDIO('387401982', 'Treyarch', 'We make the best cods, period', 'California - USA', '412214893');
  ADD_STUDIO('300012748', 'Naughty Dog', 'We know, is a strange name', 'California - USA', '464567789');
  ADD_STUDIO('378954674', 'Santa Monica Studios', 'We create narrative-driven PlayStation experiences', 'California- USA', '557375112');
  ADD_STUDIO('389430233', 'Game Freak', 'We make Pokemon', 'Tokyo - Japan', '523949502');
  ADD_STUDIO('328018912', 'Sonic Team', 'Guess the game we do', 'Tokyo - Japan', '447290611');
  ADD_STUDIO('327812721', 'Rito Gomes', 'Providing rage simultaneously on many players worldwide', 'California - USA', '572930193');
  ADD_STUDIO('377807780', 'Kojima Productions', 'Doing crazy and brilliant games?', 'Tokyo - Japan', NULL);
  ADD_STUDIO('389787862', 'CD Projekt Red', 'Best name ever', 'Warsaw - Poland', NULL);
  ADD_STUDIO('330959304', 'Redpoint', 'Focused on making remake of classics', 'Rio de Janeiro - Brasil', NULL);
  ADD_STUDIO('350672310', 'PROJECT ACES', 'The development team of ACE COMBAT.', 'Taito, Tokyo - Japan', '467949834');
 -----
 --  Insertion of USERS -- must specify if is player, dev or both
 -- Args: id , name , email , password , address, nif (case is a dev, null otherwise), payment method (case is a player, null otherwise)
  CREATE_USER('DoeJohn', 'John Doe', 'john.doe@gmail.com', 'password1bad', 'Texas - USA', '123456789', TO_TIMESTAMP('1990-01-01', 'YYYY-MM-DD'), 'Credit');
  CREATE_USER('JanePlays', 'Jane Smith', 'jane.smith@hotmail.com', 'catfurry78', 'Galway - Ireland', '987654321', TO_TIMESTAMP('1995-05-15', 'YYYY-MM-DD'), NULL);
  CREATE_USER('MikeRules', 'Michael Johnson', 'michael.johnson@gmail.com', 'johnsonJ', 'Coimbra - Portugal', '234567890', TO_TIMESTAMP('1988-10-20', 'YYYY-MM-DD'), 'Debit');
  CREATE_USER('SarahCRW', 'Sarah Williams', 'sarah.williams@outlook.com', 'll39015s', 'Aveiro - Portugal', '876543210', TO_TIMESTAMP('1992-06-30', 'YYYY-MM-DD'), 'PayPal');
  CREATE_USER('DBro', 'David Brown', 'david.brown@gmail.com', 'davBrown2503', 'Cabo Frio - Brazil', '345678901', TO_TIMESTAMP('1998-03-25', 'YYYY-MM-DD'), 'Debit');
  CREATE_USER('EmilyProfD', 'Emily Davis', 'emily.davis@contact.com', '071294', 'Cuzco - Peru', '789012345', TO_TIMESTAMP('1994-12-07', 'YYYY-MM-DD'), 'Paypal');
  CREATE_USER('GOAT', 'Hideo Kojima', 'kojimasan@contact.com', 'cryKonami', 'Tokyo - Japan', '196398273', TO_TIMESTAMP('1963-08-24', 'YYYY-MM-DD'), 'Credit');
  CREATE_USER('Inbox', 'Lucas Geraldo', 'inboxmoss@gmail.com', 'casadoLucao123', 'Lisbon - Portugal', NULL, TO_TIMESTAMP('1990-12-15', 'YYYY-MM-DD'), 'PayPal');
  CREATE_USER('BaronM', 'Eric Barone', 'eric.baron@hotmail.com', 'concernedApe', 'California - USA', '194756284', TO_TIMESTAMP('1988-01-20', 'YYYY-MM-DD'), NULL);
  CREATE_USER('Amorinus', 'Pedro Henrique', 'ph.terceiro@gmail.com', 'phTerceiro', 'Santa Catarina - Brasil', '174345457', TO_TIMESTAMP('1996-07-10', 'YYYY-MM-DD'), 'Debit');
  CREATE_USER('JazzyPenguin', 'Lily Patterson', 'lily.patterson@example.com', 'penguin123', 'New York - USA', '987654321', TO_TIMESTAMP('1995-08-12', 'YYYY-MM-DD'), 'Credit');
  CREATE_USER('MasterChef', 'Gordon Ramsay', 'gordon.ramsay@example.com', 'hellskitchen', 'London - UK', NULL, TO_TIMESTAMP('1966-11-08', 'YYYY-MM-DD'), 'PayPal');
  CREATE_USER('TechNinja', 'Alex Wong', 'alex.wong@example.com', 'coding101', 'San Francisco - USA', '123456789', TO_TIMESTAMP('1993-03-02', 'YYYY-MM-DD'), 'Bitcoin');
  CREATE_USER('StarGazer', 'Astrid Schmidt', 'astrid.schmidt@example.com', 'universe123', 'Berlin - Germany', NULL, TO_TIMESTAMP('1989-07-18', 'YYYY-MM-DD'), 'PayPal');
  CREATE_USER('Bookworm', 'Olivia Turner', 'olivia.turner@example.com', 'reading4ever', 'London - UK', '234567890', TO_TIMESTAMP('1997-05-29', 'YYYY-MM-DD'), 'Debit');
  CREATE_USER('PixelArtist', 'Maxwell Thompson', 'maxwell.thompson@example.com', 'painting123', 'Los Angeles - USA', '733688455', TO_TIMESTAMP('1991-02-14', 'YYYY-MM-DD'), 'Credit');
  CREATE_USER('SciFiFanatic', 'Isaac Johnson', 'isaac.johnson@example.com', 'scifi2023', 'Houston - USA', '345678901', TO_TIMESTAMP('1987-09-06', 'YYYY-MM-DD'), 'PayPal');
  CREATE_USER('GuitarHero', 'Emily Roberts', 'emily.roberts@example.com', 'musiclover', 'Nashville - USA', NULL, TO_TIMESTAMP('1994-12-03', 'YYYY-MM-DD'), 'Credit');
  CREATE_USER('Fashionista', 'Sophia Lee', 'sophia.lee@example.com', 'stylequeen', 'Paris - France', '789012345', TO_TIMESTAMP('1990-10-17', 'YYYY-MM-DD'), 'PayPal');
  CREATE_USER('SportsFan', 'Matthew Cooper', 'matthew.cooper@example.com', 'goTeam123', 'Sydney - Australia', NULL, TO_TIMESTAMP('1999-04-22', 'YYYY-MM-DD'), 'Debit');
  CREATE_USER('Plant', 'Plant', 'plant@valve.com', 'imaketf2', 'Manaus - Brasil', '665881223', TO_TIMESTAMP('1999-04-23', 'YYYY-MM-DD'), NULL);
END;
/

-----
--  Insertion of WORKS -- associates a dev with a studio
-- Args: developer id, nif company
INSERT INTO WORKS VALUES (
  'GOAT',
  '377807780'
);

INSERT INTO WORKS VALUES (
  'Amorinus',
  '391797921'
);

INSERT INTO WORKS VALUES (
  'JazzyPenguin',
  '388179102'
);

INSERT INTO WORKS VALUES (
  'TechNinja',
  '366666552'
);

INSERT INTO WORKS VALUES (
  'PixelArtist',
  '378954674'
);

INSERT INTO WORKS VALUES (
  'SciFiFanatic',
  '375929402'
);

INSERT INTO WORKS VALUES (
  'Fashionista',
  '389787862'
);

-----
--  Insertion of GENRES --
-- Args: code, name
INSERT INTO GENRE VALUES (
  1,
  'Action'
);

INSERT INTO GENRE VALUES (
  2,
  'Adventure'
);

INSERT INTO GENRE VALUES (
  3,
  'MOBA'
);

INSERT INTO GENRE VALUES (
  4,
  'MMO'
);

INSERT INTO GENRE VALUES (
  5,
  'RPG'
);

INSERT INTO GENRE VALUES (
  6,
  'Strategy'
);

INSERT INTO GENRE VALUES (
  7,
  'Sports'
);

INSERT INTO GENRE VALUES (
  8,
  'Third-Person-Shooter'
);

INSERT INTO GENRE VALUES (
  9,
  'Simulation'
);

INSERT INTO GENRE VALUES (
  10,
  'Puzzle'
);

INSERT INTO GENRE VALUES (
  11,
  'Racing'
);

INSERT INTO GENRE VALUES (
  12,
  'Fighting'
);

INSERT INTO GENRE VALUES (
  13,
  'First-Person-Shooter'
);

INSERT INTO GENRE VALUES (
  14,
  'Horror'
);

INSERT INTO GENRE VALUES (
  15,
  'Survival'
);

INSERT INTO GENRE VALUES (
  16,
  'Arcade'
);

BEGIN
 -----
 --  Insertion of GAMES -- many possible cases
 -- Args: game title, desc, release date, genres, nif studio, nif partners, nif developers, nif publisher, price, if is singleplayer, if is multiplayer
 -- Use SELECTED_GENRES() when informing the genres
 -- Use SELECTED_PARTNERS() when informing studios that helps the development
 -- Use SELECTED_DEVELOPERS() when informing the developers
  ADD_GAME('Foamstars', 'A copy of Splatoon', TO_TIMESTAMP('2016-06-15', 'YYYY-MM-DD'), SELECTED_GENRES(1, 8), '318721904', NULL, NULL, NULL, 59.99, FALSE, TRUE);
  ADD_GAME('Minecraft 2', 'Much more pixels and a new way of seeing things, experience surviving in a new blocky world', TO_TIMESTAMP('2016-09-20', 'YYYY-MM-DD'), SELECTED_GENRES(1, 2, 15), '365270912', NULL, NULL, '464137789', 39.99, TRUE, TRUE);
  ADD_GAME('Stardew Valley 2', 'Now you can make that thing', TO_TIMESTAMP('2017-07-25', 'YYYY-MM-DD'), SELECTED_GENRES(2, 5), NULL, NULL, SELECTED_DEVELOPERS('BaronM'), NULL, 24.99, TRUE, TRUE);
  ADD_GAME('The Elder Scrolls VI', 'Embark on a new epic adventure in the world of Tamriel', TO_TIMESTAMP('2018-11-11', 'YYYY-MM-DD'), SELECTED_GENRES(1, 2, 5), '391797921', NULL, NULL, '439740932', 49.99, TRUE, FALSE);
  ADD_GAME('The Witcher 3: Wild Hunt', 'Embark on a dark and immersive journey as Geralt of Rivia in this epic RPG', TO_TIMESTAMP('2015-05-19', 'YYYY-MM-DD'), SELECTED_GENRES(1, 2, 5), '375929402', NULL, NULL, NULL, 29.99, TRUE, FALSE);
  ADD_GAME('Halo Infinite', 'Join the Master Chief in his latest adventure against the forces of the Covenant', TO_TIMESTAMP('2021-12-08', 'YYYY-MM-DD'), SELECTED_GENRES(1, 2, 13), '397840517', NULL, NULL, '464137789', 59.99, TRUE, TRUE);
  ADD_GAME('God of War', 'Embark on a journey with Kratos in this epic action-adventure game', TO_TIMESTAMP('2018-04-20', 'YYYY-MM-DD'), SELECTED_GENRES(1, 2), '378954674', NULL, NULL, '464567789', 49.99, TRUE, FALSE);
  ADD_GAME('Resident Evil 9', 'Survive the horrors in a new chapter of the acclaimed Resident Evil series', TO_TIMESTAMP('2022-09-09', 'YYYY-MM-DD'), SELECTED_GENRES(1, 2, 8, 14), '397867250', NULL, NULL, NULL, 39.99, TRUE, FALSE);
  ADD_GAME('Assassins Creed 2 Remake', 'Relive again the beginning of Ezio story, listen to the classic music', TO_TIMESTAMP('2019-11-15', 'YYYY-MM-DD'), SELECTED_GENRES(1, 2), '330959304', NULL, NULL, '478090993', 29.99, TRUE, FALSE);
  ADD_GAME('Final Fantasy VII Remake', 'Relive the classic RPG with enhanced graphics and new gameplay mechanics', TO_TIMESTAMP('2020-04-10', 'YYYY-MM-DD'), SELECTED_GENRES(1, 2, 5), '318721904', NULL, NULL, '464567789', 59.99, TRUE, FALSE);
  ADD_GAME('Pokémon Sword and Shield', 'Embark on a new Pokémon adventure in the Galar region', TO_TIMESTAMP('2019-11-15', 'YYYY-MM-DD'), SELECTED_GENRES(2, 5), '389430233', NULL, NULL, '489593231', 49.99, TRUE, FALSE);
  ADD_GAME('The Last of Us Part II', 'Experience an emotional journey in a post-apocalyptic world', TO_TIMESTAMP('2021-06-19', 'YYYY-MM-DD'), SELECTED_GENRES(1, 2, 8), '300012748', NULL, NULL, '464567789', 59.99, TRUE, FALSE);
  ADD_GAME('Cyberpunk 3077', 'Immerse yourself in a futuristic open world filled with high-tech gadgets and cybernetic enhancements', TO_TIMESTAMP('2022-09-17', 'YYYY-MM-DD'), SELECTED_GENRES(1, 5, 13), '389787862', NULL, NULL, NULL, 39.99, TRUE, FALSE);
  ADD_GAME('Overwatch', 'Engage in team-based multiplayer battles as diverse heroes with unique abilities', TO_TIMESTAMP('2016-05-24', 'YYYY-MM-DD'), SELECTED_GENRES(1, 13), '375929402', NULL, NULL, '412214893', 29.99, FALSE, TRUE);
  ADD_GAME('Life Stranding', 'Now its the babies turn', TO_TIMESTAMP('2019-11-08', 'YYYY-MM-DD'), SELECTED_GENRES(1, 2, 14), '377807780', NULL, NULL, '464567789', 49.99, TRUE, FALSE);
  ADD_GAME('Minor Pay Manual', 'Now you are a good guy, living a boring life', TO_TIMESTAMP('2020-04-01', 'YYYY-MM-DD'), SELECTED_GENRES(1, 2, 8), '366666552', SELECTED_PARTNERS('366666217', '336666216'), NULL, '466666666', 19.99, TRUE, TRUE);
  ADD_GAME('Sonic Adventure 3', 'Join Sonic and his friends in an exciting 3D platforming adventure', TO_TIMESTAMP('2023-02-21', 'YYYY-MM-DD'), SELECTED_GENRES(1, 2), '328018912', NULL, NULL, '447290611', 29.99, TRUE, FALSE);
  ADD_GAME('Call of Duty: Black Ops II Remastered', 'Experience the iconic first-person shooter with improved graphics and enhanced gameplay', TO_TIMESTAMP('2021-11-12', 'YYYY-MM-DD'), SELECTED_GENRES(1, 13), '387401982', NULL, NULL, '412214893', 39.99, TRUE, TRUE);
  ADD_GAME('Destiny 3', 'Embark on an epic sci-fi adventure in the next installment of the Destiny franchise', TO_TIMESTAMP('2022-12-09', 'YYYY-MM-DD'), SELECTED_GENRES(1, 3, 13), '388179102', NULL, NULL, '464567789', 49.99, FALSE, TRUE);
  ADD_GAME('League of Legends: Rise of the Ancients', 'Unleash new champions and explore a world filled with ancient mysteries', TO_TIMESTAMP('2023-03-15', 'YYYY-MM-DD'), SELECTED_GENRES(1, 3), '327812721', NULL, NULL, NULL, 0.00, FALSE, TRUE);
  ADD_GAME('The Legend of Zelda: Time Warp', 'Embark on an epic time-traveling adventure as Link to save the kingdom once again', TO_TIMESTAMP('2021-11-18', 'YYYY-MM-DD'), SELECTED_GENRES(1, 2, 5), '365270912', NULL, NULL, '439740932', 49.99, TRUE, FALSE);
  ADD_GAME('Super Mario Galaxy 3', 'Join Mario on a cosmic journey through galaxies in this highly anticipated sequel', TO_TIMESTAMP('2022-07-15', 'YYYY-MM-DD'), SELECTED_GENRES(1, 2), '375929402', NULL, NULL, '464567789', 59.99, TRUE, FALSE);
  ADD_GAME('Fallout: New Frontiers', 'Explore a post-apocalyptic wasteland and forge a new civilization in this immersive RPG', TO_TIMESTAMP('2023-04-28', 'YYYY-MM-DD'), SELECTED_GENRES(1, 2, 5), '391797921', NULL, NULL, '439740932', 49.99, TRUE, FALSE);
  ADD_GAME('Uncharted: Lost Legacy', 'Team up with Chloe Frazer and Nadine Ross in this thrilling treasure-hunting adventure', TO_TIMESTAMP('2020-08-22', 'YYYY-MM-DD'), SELECTED_GENRES(1, 2, 8), '375929402', NULL, NULL, '412214893', 39.99, TRUE, FALSE);
  ADD_GAME('World of Warcraft: The Next Chapter', 'Continue your journey in Azeroth with new quests, dungeons, and epic battles', TO_TIMESTAMP('2022-05-17', 'YYYY-MM-DD'), SELECTED_GENRES(1, 2, 4), '391797921', NULL, NULL, '464137789', 59.99, TRUE, TRUE);
  ADD_GAME('WATCH_DOGS: Vice City', 'Return to the neon-lit streets of Vice City in this highly anticipated sequel to the watch_dogs series', TO_TIMESTAMP('2023-01-08', 'YYYY-MM-DD'), SELECTED_GENRES(1, 2, 8), '397867250', NULL, NULL, '478090993', 49.99, TRUE, FALSE);
  ADD_GAME('BioShock: Beyond the Abyss', 'Plunge into the depths of a new underwater city in this atmospheric first-person shooter', TO_TIMESTAMP('2020-12-04', 'YYYY-MM-DD'), SELECTED_GENRES(1, 13, 14), '375929402', NULL, NULL, '464567789', 39.99, TRUE, FALSE);
  ADD_GAME('Animal Crossing: Beyond Horizons', 'Discover new islands, species, and adventures in the expanded world of Animal Crossing', TO_TIMESTAMP('2020-03-20', 'YYYY-MM-DD'), SELECTED_GENRES(2, 9), '366666552', NULL, NULL, '466666666', 29.99, TRUE, TRUE);
  ADD_GAME('Mass Effect: Reborn', 'Take command of the Normandy once again and lead the fight against a new extraterrestrial threat', TO_TIMESTAMP('2022-10-28', 'YYYY-MM-DD'), SELECTED_GENRES(1, 2, 3, 13), '397840517', NULL, NULL, '464137789', 59.99, TRUE, TRUE);
  ADD_GAME('The Sims: Infinite Possibilities', 'Experience a limitless sandbox of virtual life and create your own stories', TO_TIMESTAMP('2021-09-10', 'YYYY-MM-DD'), SELECTED_GENRES(9), '318721904', NULL, NULL, '464567789', 49.99, TRUE, FALSE);
  ADD_GAME('Space Odyssey', 'Embark on an intergalactic adventure to explore uncharted planets and encounter alien civilizations', TO_TIMESTAMP('2022-03-15', 'YYYY-MM-DD'), SELECTED_GENRES(2, 6), '389430233', NULL, NULL, '478090993', 39.99, TRUE, FALSE);
  ADD_GAME('Fantasy Tactics', 'Lead a band of skilled warriors and engage in strategic battles in a fantasy realm', TO_TIMESTAMP('2023-02-12', 'YYYY-MM-DD'), SELECTED_GENRES(6), '397867250', NULL, NULL, '478090993', 29.99, TRUE, FALSE);
  ADD_GAME('Cybernetic Arena', 'Enter a futuristic arena where cybernetically enhanced fighters battle for supremacy', TO_TIMESTAMP('2020-11-17', 'YYYY-MM-DD'), SELECTED_GENRES(12), '387401982', NULL, NULL, '464567789', 19.99, TRUE, TRUE);
  ADD_GAME('Music Mayhem', 'Rock out with your favorite instruments and compete in rhythmic challenges', TO_TIMESTAMP('2023-04-01', 'YYYY-MM-DD'), SELECTED_GENRES(7, 10), '328018912', NULL, NULL, '447290611', 29.99, TRUE, FALSE);
  ADD_GAME('Detective Chronicles', 'Unravel complex mysteries and solve puzzling crimes in this immersive detective adventure', TO_TIMESTAMP('2022-02-15', 'YYYY-MM-DD'), SELECTED_GENRES(10, 14), '366666552', SELECTED_PARTNERS('366666217', '336666216'), NULL, '466666666', 39.99, TRUE, FALSE);
  ADD_GAME('Sports Heroes', 'Experience the thrill of various sports disciplines and compete for gold in realistic gameplay', TO_TIMESTAMP('2022-09-09', 'YYYY-MM-DD'), SELECTED_GENRES(7), '397840517', NULL, NULL, '464137789', 49.99, TRUE, TRUE);
  ADD_GAME('Wild West Showdown', 'Become a gunslinger and engage in intense duels and outlaw pursuits in the untamed Wild West', TO_TIMESTAMP('2023-03-05', 'YYYY-MM-DD'), SELECTED_GENRES(1, 8), '397867250', NULL, NULL, '478090993', 29.99, TRUE, TRUE);
  ADD_GAME('Sci-Fi Simulator', 'Build and manage a futuristic city, complete with advanced technologies and complex systems', TO_TIMESTAMP('2021-07-30', 'YYYY-MM-DD'), SELECTED_GENRES(9), '389787862', NULL, NULL, NULL, 49.99, TRUE, FALSE);
  ADD_GAME('Undersea Exploration', 'Dive into the depths of the ocean and discover hidden treasures and unknown creatures', TO_TIMESTAMP('2022-02-12', 'YYYY-MM-DD'), SELECTED_GENRES(2, 15), '318721904', NULL, NULL, '464567789', 39.99, TRUE, FALSE);
  ADD_GAME('Magic Academy', 'Attend a prestigious school of magic and master powerful spells in this enchanting RPG', TO_TIMESTAMP('2022-09-23', 'YYYY-MM-DD'), SELECTED_GENRES(5), '397840517', NULL, NULL, '478090993', 29.99, TRUE, FALSE);
  ADD_GAME('Magical Quest', 'Embark on a whimsical journey through a mystical realm filled with magical creatures', TO_TIMESTAMP('2023-01-14', 'YYYY-MM-DD'), SELECTED_GENRES(2, 5), NULL, NULL, SELECTED_DEVELOPERS('BaronM'), NULL, 29.99, TRUE, FALSE);
  ADD_GAME('Steampunk Chronicles', 'Explore a steampunk-inspired world and uncover the secrets of a clockwork society', TO_TIMESTAMP('2016-07-15 00:00:00', 'YYYY-MM-DD HH24:MI:SS'), SELECTED_GENRES(1, 6), NULL, NULL, SELECTED_DEVELOPERS('Amorinus'), NULL, 39.99, TRUE, TRUE);
  ADD_GAME('Ninja Legends', 'Master the art of the ninja and engage in intense stealth missions and epic battles', TO_TIMESTAMP('2017-03-28 00:00:00', 'YYYY-MM-DD HH24:MI:SS'), SELECTED_GENRES(1, 12), NULL, NULL, SELECTED_DEVELOPERS('DoeJohn'), NULL, 24.99, TRUE, FALSE);
  ADD_GAME('Mythical Realms', 'Immerse yourself in a world of myth and legend, where gods and monsters clash in epic battles', TO_TIMESTAMP('2018-09-10 00:00:00', 'YYYY-MM-DD HH24:MI:SS'), SELECTED_GENRES(2, 5), NULL, NULL, SELECTED_DEVELOPERS('MikeRules', 'DoeJohn'), NULL, 49.99, TRUE, FALSE);
  ADD_GAME('Cybernetic Warfare', 'Command a squad of advanced cybernetic soldiers in a futuristic war against rogue AI', TO_TIMESTAMP('2019-11-25 00:00:00', 'YYYY-MM-DD HH24:MI:SS'), SELECTED_GENRES(1, 13), NULL, NULL, SELECTED_DEVELOPERS('SarahCRW'), NULL, 59.99, TRUE, TRUE);
  ADD_GAME('Ace Combat 8: Overcast Skies', 'Be an air force pilot that would make Maverick look like a rookie', TO_TIMESTAMP('2021-05-08 00:00:00', 'YYYY-MM-DD HH24:MI:SS'), SELECTED_GENRES(9, 16), '350672310', NULL, NULL, '467949834', 69.99, TRUE, TRUE);
  ADD_GAME('Team Fortress 2', 'The most fun you can have online!', TO_TIMESTAMP('2022-09-17 00:00:00', 'YYYY-MM-DD HH24:MI:SS'), SELECTED_GENRES(1, 13), NULL, NULL, SELECTED_DEVELOPERS('Plant'), '467949835', 00.0, FALSE, TRUE);
 -----
 -- Insertion of OWNS
 -- Args: game code, user id, purchase price, purchase date
  PURCHASE_GAME(3, 'GOAT', SYSDATE);
  PURCHASE_GAME(13, 'DoeJohn', SYSDATE);
  PURCHASE_GAME(13, 'Inbox', SYSDATE);
  PURCHASE_GAME(3, 'Amorinus', SYSDATE);
  PURCHASE_GAME(8, 'DBro', SYSDATE);
  PURCHASE_GAME(15, 'GOAT', SYSDATE);
  PURCHASE_GAME(16, 'GuitarHero', SYSDATE);
  PURCHASE_GAME(18, 'Amorinus', SYSDATE);
  PURCHASE_GAME(13, 'Amorinus', SYSDATE);
END;
/

-----
-- Insertion of REVIEWS
-- Args: user id, game code, review date, rating, review text
INSERT INTO REVIEWS VALUES(
  'GOAT',
  3,
  CURRENT_TIMESTAMP,
  4,
  'WHY ARE THERE SO MANY PLANTS'
);

INSERT INTO REVIEWS VALUES(
  'DoeJohn',
  13,
  CURRENT_TIMESTAMP,
  5,
  'Played this game so much I''m clipping through the walls irl, 10/10'
);

INSERT INTO REVIEWS VALUES(
  'Inbox',
  13,
  CURRENT_TIMESTAMP,
  1,
  'i am inbox'
);

INSERT INTO REVIEWS VALUES(
  'Amorinus',
  3,
  CURRENT_TIMESTAMP,
  3,
  'not enough weed'
);

INSERT INTO REVIEWS VALUES(
  'DBro',
  8,
  CURRENT_TIMESTAMP,
  4,
  'visiting grandmas house feels a whole lot different now'
);

INSERT INTO REVIEWS VALUES(
  'GuitarHero',
  16,
  CURRENT_TIMESTAMP,
  4,
  'Interesting. I''m having Dejavu from 2013.'
);

BEGIN
 -----
 --  Insertion of SERVERS --
 -- Args: game code, date, region, id user, host key
  ADD_SERVER(2, SYSDATE, 'US', NULL, NULL);
  ADD_SERVER(2, SYSDATE, 'EU', 'Inbox', 'ABC123');
  ADD_SERVER(18, SYSDATE, 'EU', 'TechNinja', 'DEF456');
  ADD_SERVER(6, SYSDATE, 'US', NULL, NULL);
  ADD_SERVER(19, SYSDATE, 'ASIA', 'MikeRules', 'GHI789');
  ADD_SERVER(19, SYSDATE, 'ASIA', NULL, 'GHI789');
  ADD_SERVER(16, SYSDATE, 'US', NULL, NULL);
 -----
 --  Insertion of SESSION -- to end a session use END_SESSION with the id user
 -- Args: id user, code game, init date, server id (if has one, null otherwise)
  ADD_SESSION('GOAT', 3, SYSDATE, NULL);
  END_SESSION('GOAT');
  ADD_SESSION('GOAT', 15, SYSDATE, NULL);
  END_SESSION('GOAT');
  END_SESSION('DoeJohn');
  ADD_SESSION('Amorinus', 18, SYSDATE, 1);
  END_SESSION('Amorinus');
  ADD_SESSION('Amorinus', 13, SYSDATE + 1, NULL);
  ADD_SESSION('GuitarHero', 16, SYSDATE, NULL);
  END_SESSION('GuitarHero');
  ADD_SESSION('GuitarHero', 16, SYSDATE + 1, 1);

 -- Updating users info
  UPDATE_USER_ADDRESS('SarahCRW', 'Singapore - Singapore');
  UPDATE_USER_EMAIL('PixelArtist', 'm.thompson@eyefind.com');
  UPDATE_USER_NAME('JanePlays', 'Jane Doe');
  UPDATE_USER_PASSWORD('Plant', 'ImDeFiNeTiLyNoTMakIngHL3');
  UPDATE_NIF_DEVELOPER('EmilyProfD', '777320195');
  UPDATE_PAYMENT_METHOD('MikeRules', 'MBWay');
END;
/

COMMIT;